version: "3"
services:
  postgres:
    container_name: postgres-nestjs-drizzle
    image: postgis/postgis:16-3.5
    ports:
      - "5432:5432"
    volumes:
      - /data/postgres:/data/postgres
    env_file:
      - docker.env
    networks:
      - postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "--host=localhost", "--username=directus" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s

  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin-nestjs-drizzle
    image: dpage/pgadmin4:8.6
    ports:
      - "8080:80"
    volumes:
      - /data/pgadmin:/root/.pgadmin
    env_file:
      - docker.env
    networks:
      - postgres

  directus:
    image: directus/directus:11.3.5
    ports:
      - 8055:8055
    volumes:
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SECRET: "replace-with-secure-random-value"

      DB_CLIENT: "pg"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_DATABASE: "nestjs"
      DB_USER: "admin"
      DB_PASSWORD: "admin"

      ADMIN_EMAIL: "admin@example.com"
      ADMIN_PASSWORD: "d1r3ctu5"

      STORAGE_LOCATIONS: "s3"
      STORAGE_S3_DRIVER: "s3"
      STORAGE_S3_KEY: "AKIAW5BDRGLKIK6CDXOM"
      STORAGE_S3_SECRET: "OYSjx+7fCbJhWuduUhxHihE9cmUkZmEWKG3/TeYQ"
      STORAGE_S3_BUCKET: "blinky-bucket"
      STORAGE_S3_REGION: "eu-central-1"
      STORAGE_S3_ROOT: "directus"

    networks:
      - postgres

networks:
  postgres:
    driver: bridge
